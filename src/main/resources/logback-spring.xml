<?xml version="1.0" encoding="UTF-8"?>
<!--
    配置说明看： https://blog.csdn.net/inke88/article/details/75007649
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--application.yml 传递参数，不能使用logback 自带的<property>标签，这里的值会有个延迟，在logback接手日志时候spring项目还未加载完，spring.application.name会默认是 bootstrap -->
    <!--<springProperty scope="context" name="applicationName" source="spring.application.name" defaultValue="localhost"/>-->
    <!-- 定义日志文件 输入位置 -->
    <!--<property name="log_dir" value="logs/${applicationName}" />-->

    <!-- 定义日志文件 输入位置 -->
    <property name="log_dir" value="logs/hot_clone_java" />
    <!-- 日志最大的历史60天 -->
    <property name="maxHistory" value="60"/>

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志格式化(带颜色的只能用于控制台输出，不能用于文件输出，用于文件会造成输出文本带异常的字符串!) -->
        <!-- 详细的格式看这里: https://logback.qos.ch/manual/layouts.html#conversionWord -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%5level) --- [%16.16thread] %cyan(%-40logger{40}) %4line : %msg%n</pattern>
        </encoder>
    </appender>

    <!-- INFO级别日志 appender -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史天数 -->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %5level --- [%16.16thread] %-40logger{40} %4line : %msg%n</pattern>
        </encoder>
    </appender>

    <!-- root级别   INFO -->
    <root level="INFO">
        <!-- 控制台输出 -->
        <appender-ref ref="STDOUT" />
        <!-- 文件输出 -->
        <appender-ref ref="INFO" />
    </root>
</configuration>
